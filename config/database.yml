default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch('RAILS_MAX_THREADS') { 5 } %>
  port: 3306

development:
  <<: *default
  database: <%= Rails.application.credentials.dev_db_database %>
  username: <%= Rails.application.credentials.dev_db_username %>
  password: <%= Rails.application.credentials.dev_db_password %>
  host: <%= Rails.application.credentials.dev_db_host %>

test:
  <<: *default
  database: <%= ENV.fetch('MYSQL_DATABASE', Rails.application.credentials.test_db_database) %>
  username: <%= ENV.fetch('MYSQL_USER', Rails.application.credentials.test_db_username) %>
  password: <%= ENV.fetch('MYSQL_PASSWORD', Rails.application.credentials.test_db_password) %>
  host: <%= Rails.application.credentials.test_db_host %>

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV['MY_APP_DATABASE_URL'] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: <%= Rails.application.credentials.prod_db_database %>
  username: <%= Rails.application.credentials.prod_db_username %>
  password: <%= Rails.application.credentials.prod_db_password %>
  host: <%= Rails.application.credentials.prod_db_host %>
